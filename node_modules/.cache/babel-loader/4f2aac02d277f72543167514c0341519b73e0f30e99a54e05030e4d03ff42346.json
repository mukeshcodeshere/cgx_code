{"ast":null,"code":"var _jsxFileName = \"/Users/mukeshwaranbaskaran/Documents/MFE Notes/Curiosity Global/cgx_code/cryptocurrency-dashboard/src/context/CryptoContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useLayoutEffect, useState } from \"react\";\n\n//create context object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CryptoContext = /*#__PURE__*/createContext({});\n\n/*cryptoContext component contains api data of cryptocoins,\n cryptoId and search cryptos and there states as well\n*/\nexport const CryptoProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cryptoId, setCryptoId] = useState();\n  const [cryptoData, setCryptoData] = useState();\n  const [currency, setCurrency] = useState(\"usd\");\n  const [sortBy, setSortBy] = useState(\"market_cap_desc\");\n  const [page, setPage] = useState(1);\n  const [totalPages] = useState(350);\n  const [perPage, setPerPage] = useState(8);\n  const [searchData, setSearchData] = useState();\n  const [coinSearch, setCoinSearch] = useState(\"\");\n  const [id, setCoinId] = useState(\"\");\n  const getCryptoData = async () => {\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${coinSearch}&order=${sortBy}&page=${page}&per_page=${perPage}`).then(res => res.json()).then(json => json);\n      // console.log(data);\n      setCryptoData(data);\n      // console.log(data.length)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getCryptoId = async () => {\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${id}&order=market_cap_desc&page=1&per_page=200`).then(res => res.json()).then(json => json);\n      // console.log(data);\n      setCryptoId(data);\n      // console.log(data.length)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSearchResult = async query => {\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/search?query=${query}`).then(res => res.json()).then(json => json);\n      console.log(data);\n      setSearchData(data.coins);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const resetFunction = () => {\n    setPage(1);\n    setCoinSearch(\"\");\n    setSortBy(\"market_cap_desc\");\n  };\n  useLayoutEffect(() => {\n    getCryptoData();\n    getCryptoId();\n  }, [currency, sortBy, page, perPage, coinSearch]);\n  return /*#__PURE__*/_jsxDEV(CryptoContext.Provider, {\n    value: {\n      cryptoData,\n      currency,\n      setCurrency,\n      sortBy,\n      setSortBy,\n      page,\n      setPage,\n      totalPages,\n      setPerPage,\n      perPage,\n      searchData,\n      getSearchResult,\n      setCoinSearch,\n      setSearchData,\n      resetFunction,\n      cryptoId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoProvider, \"pBtkB7E1Ny3C5/7MJ4kNXXNQaM8=\");\n_c = CryptoProvider;\nvar _c;\n$RefreshReg$(_c, \"CryptoProvider\");","map":{"version":3,"names":["createContext","useLayoutEffect","useState","CryptoContext","CryptoProvider","children","cryptoId","setCryptoId","cryptoData","setCryptoData","currency","setCurrency","sortBy","setSortBy","page","setPage","totalPages","perPage","setPerPage","searchData","setSearchData","coinSearch","setCoinSearch","id","setCoinId","getCryptoData","data","fetch","then","res","json","error","console","log","getCryptoId","getSearchResult","query","coins","resetFunction"],"sources":["/Users/mukeshwaranbaskaran/Documents/MFE Notes/Curiosity Global/cgx_code/cryptocurrency-dashboard/src/context/CryptoContext.js"],"sourcesContent":["import { createContext, useLayoutEffect, useState } from \"react\";\n\n//create context object\nexport const CryptoContext = createContext({});\n\n/*cryptoContext component contains api data of cryptocoins,\n cryptoId and search cryptos and there states as well\n*/\nexport const CryptoProvider = ({ children }) => {\n  const [cryptoId, setCryptoId] = useState();\n  const [cryptoData, setCryptoData] = useState();\n  const [currency, setCurrency] = useState(\"usd\");\n  const [sortBy, setSortBy] = useState(\"market_cap_desc\");\n  const [page, setPage] = useState(1);\n  const [totalPages] = useState(350);\n  const [perPage, setPerPage] = useState(8);\n  const [searchData, setSearchData] = useState();\n  const [coinSearch, setCoinSearch] = useState(\"\");\n  const [id , setCoinId] = useState(\"\")\n \n  const getCryptoData = async () => {\n    try {\n      const data = await fetch(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${coinSearch}&order=${sortBy}&page=${page}&per_page=${perPage}`\n      )\n        .then((res) => res.json())\n        .then((json) => json);\n      // console.log(data);\n      setCryptoData(data);\n      // console.log(data.length)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getCryptoId = async () => {\n    try {\n      const data = await fetch(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${id}&order=market_cap_desc&page=1&per_page=200`\n      )\n        .then((res) => res.json())\n        .then((json) => json);\n      // console.log(data);\n      setCryptoId(data);\n      // console.log(data.length)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  const getSearchResult = async (query) => {\n    try {\n      const data = await fetch(\n        `https://api.coingecko.com/api/v3/search?query=${query}`\n      )\n        .then((res) => res.json())\n        .then((json) => json);\n\n      console.log(data);\n      setSearchData(data.coins);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const resetFunction = () => {\n    setPage(1);\n    setCoinSearch(\"\");\n    setSortBy(\"market_cap_desc\");\n  };\n\n  useLayoutEffect(() => {\n    getCryptoData();\n    getCryptoId();\n  }, [currency, sortBy, page, perPage, coinSearch]);\n\n  return (\n    <CryptoContext.Provider\n      value={{\n        cryptoData,\n        currency,\n        setCurrency,\n        sortBy,\n        setSortBy,\n        page,\n        setPage,\n        totalPages,\n        setPerPage,\n        perPage,\n        searchData,\n        getSearchResult,\n        setCoinSearch,\n        setSearchData,\n        resetFunction,\n        cryptoId\n      }}\n    >\n      {children}\n    </CryptoContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}